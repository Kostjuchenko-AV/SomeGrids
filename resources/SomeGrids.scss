/*! Some Grids by Mika Spell v 1.2.9 */

// This is grids calculator 

// $width - width of your site
// $grids - number of columns
// $gutter - the width of the outer indentation in each column  (margin-left & margin-right)

$width: 960px;
$grids: 12;
$gutter: 10px;

$adaptive: false; // true|false

$tablet-bpoint: 768px;
$laptop-bpoint: 990px;
$screen-bpoint: 1200px;

* {

  box-sizing: border-box;

  &:before, &:after {

    box-sizing: border-box;
  }
}

@mixin clearfix {

  *zoom: 1;

  &:before, &:after {

    display: table;
    content: "";
    line-height: 0;
  }

  &:after {
    
    clear: both;
  }
}

.wrapper {

  width: $width;
  margin-left: auto;
  margin-right: auto;
  padding-left: $gutter;
  padding-right: $gutter;
}

.box {

  margin-left: -$gutter;
  margin-right: -$gutter; 
}

%for-grids {

  min-height: 1px;
  position: relative;
  padding-left: $gutter;
  padding-right: $gutter;
}

@for $colNum from 1 through ($grids) {

  @if $adaptive == true {

    .sgrid-#{$colNum}, .mgrid-#{$colNum}, .tgrid-#{$colNum}, .lgrid-#{$colNum} {

      @extend %for-grids;
    } 

  } @else {

    .sgrid-#{$colNum} {

      @extend %for-grids;
    }
  }
}

%inline-type {

  display: inline-block;
  *display: inline;
  *zoom: 1;
  font-size: $baseFSize;
  vertical-align: top;
}

%float-type {

  float: left;
  display: block;
}

%flex-type {

  flex: 1 0 auto;
  display: block;
}


.inline {

  text-align: left;
  font-size: 0;

  @for $colNum from 1 through ($grids) {

    @if $adaptive == true {

      > .sgrid-#{$colNum}, > .mgrid-#{$colNum}, > .tgrid-#{$colNum}, > .lgrid-#{$colNum} {

        @extend %inline-type;
      } 

    } @else {

      > .sgrid-#{$colNum} {

        @extend %inline-type;
      }
    }
  }
}

.float {

  @include clearfix;

  @for $colNum from 1 through ($grids) {

    @if $adaptive == true {

      > .sgrid-#{$colNum}, > .mgrid-#{$colNum}, > .tgrid-#{$colNum}, > .lgrid-#{$colNum} {

        @extend %float-type;
      } 

    } @else {

      > .sgrid-#{$colNum} {

        @extend %float-type;
      }
    }
  }
}

.flex {

  display: flex;
  flex-flow: row wrap;
  justify-content: space-around;
  align-items: stretch;
  align-content: stretch;

  @for $colNum from 1 through ($grids) {

    @if $adaptive == true {

      > .sgrid-#{$colNum}, > .mgrid-#{$colNum}, > .tgrid-#{$colNum}, > .lgrid-#{$colNum} {

        @extend %flex-type;
      } 

    } @else {

      > .sgrid-#{$colNum} {

        @extend %flex-type;
      }
    }
  }
}

/* Grid system */

@for $i from 1 through $grids {

  .sgrid-#{$i} {

    width: (100% / $grids) * $i;
  }
}

@if $adaptive == true {

  $adaptive-grids: (

    mgrid: $tablet-bpoint,
    tgrid: $laptop-bpoint,
    lgrid: $screen-bpoint
  );

  @each $grid-class, $width in $adaptive-grids {

    @media (min-width: $width) {

      @for $i from 1 through $grids {

        .#{$grid-class}-#{$i} {

          width: (100% / $grids) * $i;
        }
      }
    }
  }

  @media (max-width: $tablet-bpoint) {

    .sgrid-hidden, .mgrid-visible, .tgrid-visible, .lgrid-visible {

      display: none !important;
    }
  }

  @media (min-width: $tablet-bpoint) and (max-width: $laptop-bpoint) {

    .mgrid-hidden, .sgrid-visible, .tgrid-visible, .lgrid-visible {

      display: none !important;
    }
  }

  @media (min-width: $laptop-bpoint) and (max-width: $screen-bpoint) {

    .tgrid-hidden, .sgrid-visible, .mgrid-visible, .lgrid-visible {

      display: none !important;
    }
  }

  @media (min-width: $screen-bpoint) {

    .lgrid-hidden, .sgrid-visible, .mgrid-visible, .tgrid-visible {

      display: none !important;
    }
  }
} @else {

  @for $i from 1 through ($grids - 1) { 

    .pre-#{$i} {

      margin-left: (100% / $grids) * $i;
    }

      .post-#{$i} {

      margin-right: (100% / $grids) * $i;
    }
  }
}

// .pre и .post на данный момент работают только при adaptive == false